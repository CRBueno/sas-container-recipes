###############################################################################
# Set of functions to support creating the database datanodes
###############################################################################

function primary_data_node() {
    echo_line "Removing recovery.* files if they exist..."
    if [ -e ${PG_DATADIR}/recovery.conf ]; then
        echo_line "INFO: Deleting recovery.conf file..."

        success=false
        rm ${PG_DATADIR}/recovery.conf && success=true

        if ! $success ; then
            echo_line "ERROR: Failed to delete '${PG_DATADIR}/recovery.conf' file."
            exit 4
        fi
    fi

    if [ -e ${PG_DATADIR}/recovery.done ]; then
        echo_line "INFO: Deleting recovery.done file..."

        success=false
        rm ${PG_DATADIR}/recovery.done && success=true

        if ! $success ; then
            echo_line "ERROR: Failed to delete '${PG_DATADIR}/recovery.done' file."
            exit 4
        fi
    fi

    # If no file existed, then lets see if the data dir exists yet
    if [ ! -d ${PG_DATADIR} ]; then
        ${SASHOME}/bin/pg_ctl -D ${PG_DATADIR} initdb || rm -rf ${PG_DATADIR}

        success=false
        mkdir ${PG_DATADIR}/archivedir && success=true
        chown ${SASPOSTGRESOWNER}:${SASPOSTGRESGROUP} ${PG_DATADIR}/archivedir
        if ! $success ; then
            echo_line "ERROR: Failed to create archive directory."
            exit 4
        fi
    fi

    echo_line "INFO: Recording primary ip in Consul at config/${SASSERVICENAME}/sas.dataserver.pool/backend/${SASINSTANCE}/primary"
    ${BOOTSTRAP_CONFIG} kv write --force config/${SASSERVICENAME}/sas.dataserver.pool/backend/${SASINSTANCE}/primary ${SAS_CURRENT_HOST}
    ${BOOTSTRAP_CONFIG} kv write --force config/${SASSERVICENAME}/sas.dataserver.pool/backend/${SASINSTANCE}/primary_uid ${SASINSTANCE}
    ${BOOTSTRAP_CONFIG} kv write --force config/${SASSERVICENAME}/sas.dataserver.pool/backend/${SASINSTANCE}/data_directory ${PG_DATADIR}
}

function secondary_data_node() {
    primary_ip=$1
    primary_uid=$2
    perform_restart=${3:-false}

    pg_user_home_dir=$(getent passwd ${SASPOSTGRESOWNER}|awk -F: '{print $6}')
    if [ ! -e ${pg_user_home_dir}/.pgpass ]; then
        touch ${pg_user_home_dir}/.pgpass
        chmod 0600 ${pg_user_home_dir}/.pgpass
        chown ${SASPOSTGRESOWNER} ${pg_user_home_dir}/.pgpass
        echo >> ${pg_user_home_dir}/.pgpass "*:*:*:${SASPOSTGRESREPLUSER}:${SASPOSTGRESREPLPWD}"
    fi

    if [ -z "${primary_ip}" ]; then
        echo_line "ERROR: The primary ip for the data node is not defined...exiting"
        exit 1
    fi

    # if [ -d ${PG_DATADIR} ]; then
    #     echo_line "INFO: removing data directory..."
    #     success=false
    #     rm -rf ${PG_DATADIR} && success=true

    #     if ! $success; then
    #         echo_line "ERROR: Deleting data directory failed."
    #         exit 5
    #     fi
    # fi

    if [ ! -d ${PG_DATADIR} ]; then
        echo_line "INFO: Initializing backup..."
        success=false
        echo_line "[repl:secondary] DATADIR (${PG_DATADIR}) not found; seeding from preferred primary (${primary_ip})"
        ${SASHOME}/bin/pg_basebackup -h ${primary_ip} -p ${SASPOSTGRESPORT} -D ${PG_DATADIR} -P -U ${SASPOSTGRESREPLUSER} --xlog-method=stream -R && success=true

        if ! $success; then
            echo_line "ERROR: Initial backup failed."
            rm -rf ${PG_DATADIR}
            exit 5
        fi
    fi

    if [ -e ${PG_DATADIR}/recovery.conf ]; then
        echo_line "INFO: Removing old recovery.conf file..."
        success=false
        rm ${PG_DATADIR}/recovery.conf && success=true

        if ! $success; then
            echo_line "ERROR: Removing old recovery.conf failed."
            exit 4
        fi
    fi

    echo_line "INFO: Creating recovery.conf file..."
    cat >${PG_DATADIR}/recovery.conf <<EOL
standby_mode     = 'on'      # to enable the standby (read-only) mode.
primary_conninfo = 'host=${primary_ip} port=${SASPOSTGRESPORT}  user=${SASPOSTGRESREPLUSER} password=${SASPOSTGRESREPLPWD}'
recovery_target_timeline = 'latest'
restore_command  = 'cp ${PG_DATADIR}/archivedir/%f "%p"'
                         # to specify a recovery command.
EOL

    chown ${SASPOSTGRESOWNER}:${SASPOSTGRESGROUP} ${PG_DATADIR}/recovery.conf
    chmod 0644 ${PG_DATADIR}/recovery.conf

    if ${perform_restart}; then
        ${SASHOME}/bin/pg_ctl -o "-c config_file=${SASPOSTGRESCONFIGDIR}/postgresql.conf -c hba_file=${SASPOSTGRESCONFIGDIR}/pg_hba.conf" -D ${PG_DATADIR} -w -t 30 restart
    fi
    echo_line "INFO: Recording primary ip in Consul at config/${SASSERVICENAME}/sas.dataserver.pool/backend/${SASINSTANCE}/primary"
    ${BOOTSTRAP_CONFIG} kv write --force config/${SASSERVICENAME}/sas.dataserver.pool/backend/${SASINSTANCE}/primary ${primary_ip}
    ${BOOTSTRAP_CONFIG} kv write --force config/${SASSERVICENAME}/sas.dataserver.pool/backend/${SASINSTANCE}/primary_uid ${primary_uid}
    ${BOOTSTRAP_CONFIG} kv write --force config/${SASSERVICENAME}/sas.dataserver.pool/backend/${SASINSTANCE}/data_directory ${PG_DATADIR}
}

